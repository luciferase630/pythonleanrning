import json  #json 模块全部导入

filename='username.json'
with open(filename,'r') as objest:
    username=json.load(objest)
    print('welcome back,'+username + 'I')
#把这个文件当做数据加载了，那我不能把txt文件也这样加载吗？
#问得好
"""
1. 结构化数据
JSON：是一种结构化的数据格式，专为表示数据结构设计，支持嵌套的数据结构（如字典和列表的嵌套）。
TXT：纯文本文件通常只是简单的字符串，没有任何内在结构。尽管可以使用特定格式（如 CSV、TSV 等）使其有一定结构，但读取和解析会更复杂。
优势：JSON 更适合存储复杂的嵌套数据结构，因为它能直接与 Python 的字典和列表对应，且解析起来更简单。
2. 跨语言支持
JSON 是一种通用的数据格式，支持多种编程语言，特别是在网络和 API 中广泛使用。它被称为 JavaScript Object Notation，
但几乎所有现代编程语言都支持 JSON（包括 Python、Java、C# 等）。
TXT 文件 本质上只是字符串集合，语言解析起来需要自己定义规则和格式。
3. 自动类型转换
JSON 文件支持基本数据类型（如字符串、数字、布尔值、数组和对象）。在用 json.load() 加载 JSON 文件时，
这些类型会自动转换为 Python 的对应类型（如字典和列表）。
TXT 文件 则没有这种功能。如果要从文本文件中读取数据并使用特定类型（如列表或字典），通常需要手动解析字符串内容并转换类型。
4. 可读性和易于调试
JSON 格式具有较高的可读性，尤其当文件结构化存储较复杂数据时。阅读和调试 JSON 文件比读取手写的结构化 .txt 文件要简单。

python的数据结构也相当炸裂，也非常好用。堆排序也不在话下，但是我还没有尝试用它写别的东西，别急


json就讲了个dump 和load ，到时候具体怎么用还得看我
"""


